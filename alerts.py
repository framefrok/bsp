import asyncio
import logging
from datetime import datetime, timedelta
from database import get_db
from users import get_user_bonus, adjust_prices_for_user

logger = logging.getLogger(__name__)

# —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ —Ç–∞–π–º–µ—Ä–∞–º
timers = {}


async def set_timer(user_id: int, interval: int, callback, bot):
    """–ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if user_id in timers:
        timers[user_id].cancel()

    async def timer_loop():
        while True:
            try:
                await callback(user_id, bot)
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ç–∞–π–º–µ—Ä–µ {user_id}: {e}")
            await asyncio.sleep(interval)

    task = asyncio.create_task(timer_loop())
    timers[user_id] = task


def cancel_timer(user_id: int):
    """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞"""
    if user_id in timers:
        timers[user_id].cancel()
        del timers[user_id]


async def check_alerts_for_user(user_id: int, bot):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª–µ—Ä—Ç–æ–≤ (—Ü–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ –ø—Ä–æ—Ç–∏–≤ —É—Å–ª–æ–≤–∏–π –∏–≥—Ä–æ–∫–∞)
    """
    db = get_db()
    c = db.cursor()

    # –±–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–µ–Ω—ã
    c.execute("SELECT buy, sell, timestamp FROM market ORDER BY timestamp DESC LIMIT 1")
    row = c.fetchone()
    if not row:
        return

    raw_buy, raw_sell, ts = row
    buy, sell = adjust_prices_for_user(user_id, raw_buy, raw_sell)

    # –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
    c.execute("SELECT id, type, value FROM alerts WHERE user_id=?", (user_id,))
    alerts = c.fetchall()

    for alert_id, a_type, value in alerts:
        if a_type == "buy_below" and buy <= value:
            await bot.send_message(user_id, f"üìâ –¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏ —É–ø–∞–ª–∞ –¥–æ {buy} (–∞–ª–µ—Ä—Ç {value})")
            c.execute("DELETE FROM alerts WHERE id=?", (alert_id,))
        elif a_type == "sell_above" and sell >= value:
            await bot.send_message(user_id, f"üìà –¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏ –ø–æ–¥–Ω—è–ª–∞—Å—å –¥–æ {sell} (–∞–ª–µ—Ä—Ç {value})")
            c.execute("DELETE FROM alerts WHERE id=?", (alert_id,))

    db.commit()
